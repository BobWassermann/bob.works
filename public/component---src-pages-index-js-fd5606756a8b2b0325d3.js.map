{"version":3,"sources":["webpack:///./src/components/heading.js","webpack:///./src/components/paragraph.js","webpack:///./src/components/bubble.js","webpack:///./src/pages/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Heading","styled","h1","_templateObject","Paragraph","p","paragraph_templateObject","Bubble","props","react_default","a","createElement","gatsby_browser_entry","bubble_templateObject","IndexPage","layout","seo","title","style","placeSelf","heading","paragraph","textAlign","bubble","Main","main","Layout","_ref","children","_public_static_d_856328897_json__WEBPACK_IMPORTED_MODULE_0__","data","react__WEBPACK_IMPORTED_MODULE_1___default","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"2WAEA,IAQeA,EARCC,IAAOC,GAAVC,2NCAb,IAQeC,EARGH,IAAOI,EAAVC,qRCEf,IAUeC,EAVAN,YAAO,SAAAO,GAAK,OAAIC,EAAAC,EAAAC,cAACC,EAAA,EAASJ,IAA1BP,CAAHY,KCoBGC,UAfG,kBAChBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,MAAM,SACXR,EAAAC,EAAAC,cAAA,OAAKO,MAAO,CAAEC,UAAW,cACvBV,EAAAC,EAAAC,cAACS,EAAD,uBACAX,EAAAC,EAAAC,cAACU,EAAD,4BACAZ,EAAAC,EAAAC,cAACU,EAAD,4BAEFZ,EAAAC,EAAAC,cAAA,OAAKO,MAAO,CAAEC,UAAW,MAAOG,UAAW,UACzCb,EAAAC,EAAAC,cAACY,EAAD,6BACAd,EAAAC,EAAAC,cAACY,EAAD,iWCLN,IAAMC,EAAOvB,IAAOwB,KAAVtB,KA2BKuB,IAlBA,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACNC,EAAAC,KAUV,OAAOC,EAAArB,EAAAC,cAACa,EAAD,KAAOI,8KCtBhB,SAASI,EAATL,GAAiD,IAAlCM,EAAkCN,EAAlCM,YAAaC,EAAqBP,EAArBO,KAAMC,EAAeR,EAAfQ,KAAMlB,EAASU,EAATV,MAC9BmB,EADuCC,EAAAP,KACvCM,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACEF,EAAArB,EAAAC,cAAC6B,EAAA9B,EAAD,CACE+B,eAAgB,CACdP,QAEFjB,MAAOA,EACPyB,cAAa,QAAUN,EAAKG,aAAatB,MACzCkB,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAAS3B,GAEX,CACE4B,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKG,aAAaO,QAE7B,CACEH,KAAI,gBACJC,QAAS3B,GAEX,CACE0B,KAAI,sBACJC,QAASN,IAEXS,OAAOZ,KAKfH,EAAIgB,aAAe,CACjBd,KAAI,KACJC,KAAM,GACNF,YAAW,IAUED,+SCvFf,IAAsBiB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAAE,EAAAC,GAAAH,EAAAK,EAAAC,EAAA,sBAAAF,EAAAjD,IAAA6C,EAAA,KAAAA,EAAA,GAcyBO,QAAOC,QAELC,IAAMC,cAAc,+ECMhCC,UAjBU,SAAAvC,GAAiC,IAA9BwC,EAA8BxC,EAA9BwC,SAAUC,EAAoBzC,EAApByC,cACpC,OAAKA,EAGEJ,IAAMrD,cAAc0D,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV","file":"component---src-pages-index-js-fd5606756a8b2b0325d3.js","sourcesContent":["import styled from 'styled-components'\n\nconst Heading = styled.h1`\n  color: #fff;\n  font-size: 38px;\n  line-height: 43px;\n  font-weight: bold;\n  margin: 0 0 10px;\n`\n\nexport default Heading","import styled from 'styled-components'\n\nconst Paragraph = styled.p`\n  color: #ADADAD;\n  font-size: 24px;\n  line-height: 29px;\n  font-weight: normal;\n  margin: 0 0 5px;\n`\n\nexport default Paragraph","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from 'styled-components'\n\nconst Bubble = styled(props => <Link {...props} />)`\n  background-color: #F700A9;\n  color: #fff;\n  border-radius: 180px;\n  text-decoration: none;\n  padding: 15px 20px;\n  display: block;\n  margin-bottom: 10px;\n`\n\nexport default Bubble;","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Heading from '../components/heading'\nimport Paragraph from '../components/paragraph'\nimport Bubble from '../components/bubble'\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <div style={{ placeSelf: 'end start' }}>\n      <Heading>Bob Wassermann</Heading>\n      <Paragraph>Front-end developer</Paragraph>\n      <Paragraph>Interface designer</Paragraph>\n    </div>\n    <div style={{ placeSelf: 'end', textAlign: 'right' }}>\n      <Bubble>What keeps you busy?</Bubble>\n      <Bubble>Can we get in touch?</Bubble>\n    </div>\n  </Layout>\n)\n\nexport default IndexPage\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from 'styled-components';\n\nimport \"./layout.css\"\n\nconst Main = styled.main`\n  padding: 60px 20px;\n  display: grid;\n  height: 100vh;\n  grid-template-rows: auto 250px;\n  max-width: 1200px;\n  margin: auto;\n`\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return <Main>{children}</Main>\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}